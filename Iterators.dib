#!meta

{"kernelInfo":{"defaultKernelName":null,"items":[{"name":"csharp","languageName":"C#","aliases":["c#","cs"]},{"name":"fsharp","languageName":"F#","aliases":["f#","fs"]},{"name":"pwsh","languageName":"PowerShell","aliases":["powershell"]},{"name":"javascript","languageName":"JavaScript","aliases":["js"]},{"name":"html","languageName":"HTML"},{"name":"sql","languageName":"SQL"},{"name":"kql","languageName":"KQL"},{"name":"mermaid","languageName":"Mermaid"},{"name":"httpRequest","languageName":"http"},{"name":"value"}]}}

#!csharp

IEnumerable<int> Fib (int n) {
  var curr = 1;
  var next = 1;

  while (--n >= 0) {
    yield return curr;

    var newNext = curr + next;
    curr = next;
    next = newNext;
  }
}

IEnumerable<int> EvenFib (int n) {
  foreach (var x in Fib(n)) {
    if (x % 2 == 0) {
      yield return x;
    }
  }
}

IEnumerable<int> Go (bool breakEarly) {
  yield return 1;
  yield return 2;
  if (breakEarly) { yield break; }
  yield return 3;
}

foreach (var x in EvenFib(20)) { Console.WriteLine(x); }
foreach (var x in Go(true)) { Console.WriteLine(x); }
